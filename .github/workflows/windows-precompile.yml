name: windows-precompile

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  mix_compile:
    runs-on: windows-latest
    env:
      OPENCV_VER: "4.6.0"
    strategy:
      fail-fast: false
      matrix:
        include:
          # - pair:
          #     arch: arm64
          #     arch_name: aarch64
          #     msbuild_platform: ARM64
          #     vcvarsall: amd64_arm64
          #     CMAKE_GENERATOR_TYPE: "Visual Studio 17"
          #     CMAKE_TOOLCHAIN_FILE: "cc_toolchain/aarch64-windows-msvc.cmake"
          - pair:
              arch: x64
              arch_name: x86_64
              msbuild_platform: x64
              vcvarsall: x64
              CMAKE_GENERATOR_TYPE: "Ninja"

    steps:
      - uses: actions/checkout@v3

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.pair.vcvarsall }}

      - name: Cache OpenCV Source Code
        id: cache-opencv
        uses: actions/cache@v3
        with:
          key: opencv-${{ env.OPENCV_VER }}
          path: |
            ./src/cache
            ./src/opencv

      - name: Create precompiled archive
        shell: bash
        run: |
          export CMAKE_OPENCV_OPTIONS="-D WITH_FFMPEG=OFF"
          if [ "${{ matrix.pair.vcvarsall }}" = "amd64_arm64" ]; then
            export CMAKE_GENERATOR_TYPE="${{ matrix.pair.CMAKE_GENERATOR_TYPE }}"
            export MSBUILD_PLATFORM="${{ matrix.pair.MSBUILD_PLATFORM }}"
            export CMAKE_TOOLCHAIN_FILE="$(pwd)/${{ matrix.pair.CMAKE_TOOLCHAIN_FILE }}"
            export TOOLCHAIN_FILE="$(pwd)/${{ matrix.pair.CMAKE_TOOLCHAIN_FILE }}"
          fi
          echo "CMAKE_TOOLCHAIN_FILE: ${CMAKE_TOOLCHAIN_FILE}"
          nmake

      - name: Create precompiled archive
        shell: bash
        run: |
          export PKG_NAME=opencv_${{ matrix.pair.arch_name }}-windows-msvc-${GITHUB_REF##*/v}
          tar -czf "${PKG_NAME}.tar.gz" "precompiled"
          ls -lah "${PKG_NAME}.tar.gz"
          mkdir -p artifacts
          mv "${PKG_NAME}.tar.gz" artifacts

      - uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.tar.gz
